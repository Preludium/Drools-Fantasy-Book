package com.sample

import static com.sample.DroolsTest.*;
 
declare Action
	question: String @key
	answer: String
end
 
rule "Init"
	when
	then
		Action a = new Action("Are you going to be upset when you don't find Harry Potter?");
		String[] answers = { "Yes", "No" };
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);		
        insert(a);
end

rule "Give me more precocious lads at schools of magic, please."
	when
		Action(question == "Are you going to be upset when you don't find Harry Potter?" && answer == "Yes")
	then
		showAnswer("\"The Kingkiller Chronicles\" Patrick Rothfuss");
end

rule "I know where to find him if I need him."
	when
		Action(question == "Are you going to be upset when you don't find Harry Potter?" && answer == "No")
	then
		Action a = new Action("Are you new to the fantasy genre?");
		String[] answers = { "Yes", "No", "Maybe" };
 		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
 		insert(a);
end

rule "I am as yet unfamiliar with your tropes. Do your worst."
	when
		Action(question == "Are you new to the fantasy genre?" && answer == "Yes")
	then
		Action a = new Action("\"The Lord of the Rings\" J. R. R. Tolkien");
		String[] answers = {"Ok", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "I'm what you call, experienced."
	when
		Action(question == "Are you new to the fantasy genre?" && answer == "No")
	then
		Action a = new Action("Like the Arthurian legend?");
		String[] answers = {"Yes", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "Does the Wizard of Oz count?"
	when
		Action(question == "Are you new to the fantasy genre?" && answer == "Maybe")
	then
		showAnswer("\"Wicked\" Gregory Macguire");
end

rule "I'm not that new"
	when
		Action(question == "\"The Lord of the Rings\" J. R. R. Tolkien" && answer == "No")
	then
		showAnswer("\"The Silmarillon\" J. R. R. Tolkien");
end
	
rule "\"The Lord of the Rings\" J. R. R. Tolkien, OK"
	when
		Action(question == "\"The Lord of the Rings\" J. R. R. Tolkien" && answer == "Ok")
	then
		showAnswer("\"The Lord of the Rings\" J. R. R. Tolkien");
end

rule "I own The Sword and the Stone on DVD and VHS."
	when
		Action(question == "Like the Arthurian legend?" && answer == "Yes")
	then
		String question = "Which character do you like best?";	
		String[] answers = {"Morgan Le Faye", "Merlin", "Arthur"};
		String[] books = {"\"The Mists of Avalon\" Marion Zimmer Bradley", "\"The Crystal Cave\" Mary Steward", "\"The Once and Future King\" T. H. White"};
		showAnswers(books, chooseAnswer(question, answers));
end

rule "Like the Arthurian legend?, No"
	when
		Action(question == "Like the Arthurian legend?" && answer == "No")
	then
		Action a = new Action("Looking for modern-day settings?");
		String[] answers = {"Yes", "No", "Maybe"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "I'm a city-person"
	when
		Action(question == "Looking for modern-day settings?" && answer == "Yes")
	then
		Action a = new Action("Gods or people under the streets?");
		String[] answers = {"Modern Mythology", "A world beneath the city"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "Let's find another world, this one's depressing."
	when
		Action(question == "Looking for modern-day settings?" && answer == "No")
	then
		Action a = new Action("Fan of Westerns?");
		String[] answers = {"Yes", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "I'm partial to small towns."
	when
		Action(question == "Looking for modern-day settings?" && answer == "Maybe")
	then
		showAnswer("\"Something Wicked This Way Comes\" Ray Bradbury");
end

rule "Gods or people under the streets?, Modern Mythology"
	when
		Action(question == "Gods or people under the streets?" && answer == "Modern Mythology")
	then
		showAnswer("\"American Gods\" Neil Gaiman");
end

rule "Gods or people under the streets?, A world beneath the city"
	when
		Action(question == "Gods or people under the streets?" && answer == "A world beneath the city")
	then
		showAnswer("\"Neverwhere\" Neil Gaiman");
end

rule "I'm prone to don champs and walk the streets at high noon."
	when
		Action(question == "Looking for modern-day settings?" && answer == "Yes")
	then
		showAnswer("\"The Dark Tower\" Stephen King");
end

rule "Too dusty. And I'm not much of a card player."
	when
		Action(question == "Looking for modern-day settings?" && answer == "No")
	then
		Action a = new Action("Animals more your thing?");
		String[] answers = {"Yes", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "I donate to the WWF. Not the wrestling one."
	when
		Action(question == "Animals more your thing?" && answer == "Yes")
	then
		String question = "What's your ideal pet?";
		String[] answers = {"Unicorn", "Bunny", "Dragon"};
		String[] books = {"\"The Last Unicorn\" Peter S. Beagle", "\"Watership Down\" Richard Adams", "\"Dragonflight\" Anne McCaffrey"};
		showAnswers(books, chooseAnswer(question, answers));
end

rule "I have allergies."
	when
		Action(question == "Animals more your thing?" && answer == "No")
	then
		Action a = new Action("How about some alternate history?");
		String[] answers = {"Yes", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "I'm a revisionist myself."
	when
		Action(question == "How about some alternate history?" && answer == "Yes")
	then
		String question = "Romance or warring magicians?";
		String[] answers = {"Romance", "Magicians"};
		String[] books = {"\"Kushiel's Legacy Series\" Jacqueline Carey", "\"Jonathan Strange & Mr. Norrell\" Susanne Clarke"};
		showAnswers(books, chooseAnswer(question, answers));
end

rule "I never paid any attencion in history class."
	when
		Action(question == "How about some alternate history?" && answer == "No")
	then
		Action a = new Action("Ready to dive into a series?");
		String[] answers = {"Yes", "No", "Maybe"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "The other two options ended with some strange choices."
	when
		Action(question == "Ready to dive into a series?" && answer == "Yes")
	then
		Action a = new Action("Does the series have to be finished?");
		String[] answers = {"Yes", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "Let's keep this casual."
	when
		Action(question == "Ready to dive into a series?" && answer == "No")
	then
		String question = "With pirates or without?";
		String[] answers = {"Pirates Please", "No pirates here. No siree, Bob. No pirates at all"};
		String[] books = {"\"The Princess Bride\" William Goldman", "\"Stardust\" Neil Gaiman"};
		showAnswers(books, chooseAnswer(question, answers));
end

rule "How about an episodic series?"
	when
		Action(question == "Ready to dive into a series?" && answer == "Maybe")
	then
		String question = "What's your pleasure?";
		String[] answers = {"Bureaucratic Satire", "Religious Satire", "Fun with Puns"};
		String[] books = {"\"Going Postal\" Terry Pratchett", "\"Small Gods\" Terry Pratchett", "\"Xanth Series\" Piers Anthony"};
		showAnswers(books, chooseAnswer(question, answers));
end

rule "Yes, the series have to be finished."
	when
		Action(question == "Does the series have to be finished?" && answer == "Yes")
	then
		Action a = new Action("Do the words Sword and Sorcery have a positive connotation for you?");
		String[] answers = {"Yes", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "I like to be held in suspense. Preferably for years at a time."
	when
		Action(question == "Does the series have to be finished?" && answer == "No")
	then
		String question = "Take the high road or the low road?";
		String[] answers = {"Low Fantasy", "High Fantasy"};
		String[] books = {"\"Song of Ice and Fire\" George R.R. Martin", "\"The Way of Kings\" Brandon Sanderson"};
		showAnswers(books, chooseAnswer(question, answers));
end

rule "Wizards and barbarians? What's not to like?"
	when
		Action(question == "Do the words Sword and Sorcery have a positive connotation for you?" && answer == "Yes")
	then
		Action a = new Action("Roleplayer?");
		String[] answers = { "Yes", "No" };
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "No, the words Sword and Sorcery have a negative connotation for me."
	when
		Action(question == "Do the words Sword and Sorcery have a positive connotation for you?" && answer == "No")
	then
		Action a = new Action("Looking for an old-fashioned Trilogy?");
		String[] answers = { "Yes", "No" };
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "Three is my lucky number."
	when
		Action(question == "Looking for an old-fashioned Trilogy?" && answer == "Yes")
	then
		String question = "What shall we read about?";
		String[] answers = {"Thieves", "MacGuffins", "Assassins", "Magicians"};
		String[] books = {"\"The Mistborn Trilogy\" Brandon Sanderson", "\"The Sword of Shannara Trilogy\" Terry Brooks",
			"\"The Farseer Trilogy\" Robin Hobb", "\"The Riftwar Saga\" Raymond E. Feist" };
		showAnswers(books, chooseAnswer(question, answers));
end

rule "In for a penny, in for a pound I always say."
	when
		Action(question == "Looking for an old-fashioned Trilogy?" && answer == "No")
	then
		Action a = new Action("So, five or six books enough for you?");
		String[] answers = { "Yes", "No" };
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "I shall require at least ten."
	when
		Action(question == "So, five or six books enough for you?" && answer == "No")
	then
		Action a = new Action("Enjoy quests to prevent great evil from conquering the world?");
		String[] answers = { "Yes", "No" };
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end
	
rule "Good vs. Evil on an epic scale, please."
	when
		Action(question == "Enjoy quests to prevent great evil from conquering the world?" && answer == "Yes")
	then
		String question = "Who will save us?";
		String[] answers = { "The Seeker of Truth", "The One Power" };
		String[] books = { "\"The Sword of Truth Series\" Terry Goodkind", "\"The Wheel of Time\" Robert Jordan" };
		showAnswers(books, chooseAnswer(question, answers));
end

rule "I need a little more complexity."
	when
		Action(question == "Enjoy quests to prevent great evil from conquering the world?" && answer == "No")
	then
		String question = "Choose wisely, this is the end.";
		String[] answers = { "Earth in the Shadows", "Weaving Timeline" };
		String[] books = { "\"The Chronicles of Amber\" Roger Zelazny", "\"The Malazan Book of the Fallen Series\" Steven Erikson" };
		showAnswers(books, chooseAnswer(question, answers));
end

rule "That should keep me busy."
	when
		Action(question == "So, five or six books enough for you?" && answer == "Yes")
	then
		Action a = new Action("Enjoy stories about orphaned farm boys?");
		String[] answers = { "Yes", "No" };
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end
	
rule "Yes, I enjoy stories about orphaned farm boys."
	when
		Action(question == "Enjoy stories about orphaned farm boys?" && answer == "Yes")
	then
		showAnswer("No books for you, sorry :(");
end	
	
rule "Tough."
	when
		Action(question == "Enjoy stories about orphaned farm boys?" && answer == "No")
	then
		showAnswer("\"The Codex Alera\" Jim Butcher\n\"The Belgariad\" David Eddings");
end

rule "How about a trilogy about trilogies?"
	when
		Action(question == "Looking for an old-fashioned Trilogy?" && answer == "Maybe")
	then
		showAnswer("\"The Chronicles of Thomas Covenant, The Unbeliever\" Stephen R. Donaldson");
end

rule "Yes, a roleplayer."
	when
		Action(question == "Roleplayer?" && answer == "Yes")
	then
		showAnswer("\"The Legend od Drizzt\" R.A. Salvatore");
end

rule "No, not a roleplayer."
	when
		Action(question == "Roleplayer?" && answer == "No")
	then
		String question = "More wizards of barbarians?";
		String[] answers = { "Barbarians", "Wizards" };
		String[] books = { "\"Chronicles of Conan the Barbarian\" Robert E. Howard", "\"The Elric Saga\" Michael Moorcock" };
		showAnswers(books, chooseAnswer(question, answers));
end