package com.sample

import static com.sample.DroolsTest.*;
 
declare Action
	question: String @key
	answer: String
end

declare ActionList
	question: String @key
	books: String[]
	chosen: boolean[]
end
 
rule "Init"
	when
	then
		Action a = new Action("Are you going to be upset when you don't find Harry Potter?");
		String[] answers = { "Yes", "No" };	
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);		
        insert(a);
end

rule "Give me more precocious lads at schools of magic, please."
	when
		Action(question == "Are you going to be upset when you don't find Harry Potter?" && answer == "Yes")
	then
		showAnswer("\"The Kingkiller Chronicles\" Patrick Rothfuss");
end

rule "I know where to find him if I need him."
	when
		Action(question == "Are you going to be upset when you don't find Harry Potter?" && answer == "No")
	then
		Action a = new Action("Are you new to the fantasy genre?");
		String[] answers = { "Yes", "No", "Maybe" };
 		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
 		insert(a);
end

rule "I am as yet unfamiliar with your tropes. Do your worst."
	when
		Action(question == "Are you new to the fantasy genre?" && answer == "Yes")
	then
		Action a = new Action("\"The Lord of the Rings\" J. R. R. Tolkien");
		String[] answers = {"Ok", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "I'm what you call, experienced."
	when
		Action(question == "Are you new to the fantasy genre?" && answer == "No")
	then
		Action a = new Action("Like the Arthurian legend?");
		String[] answers = {"Yes", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "Does the Wizard of Oz count?"
	when
		Action(question == "Are you new to the fantasy genre?" && answer == "Maybe")
	then
		showAnswer("\"Wicked\" Gregory Macguire");
end

// JANEK
rule "The other two options ended with some strange choices."
	when
		Action(question == "Ready to dive into a series?" && answer == "Yes")
	then
		Action a = new Action("Does the series have to be finished?");
		String[] answers = {"Yes", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "Yes, the series have to be finished."
	when
		Action(question == "Does the series have to be finished?" && answer == "Yes")
	then
		Action a = new Action("Do the words Sword and Sorcery have a positive connotation for you?");
		String[] answers = {"Yes", "No"};
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "I like to be held in suspense. Preferably for years at a time."
	when
		Action(question == "Does the series have to be finished?" && answer == "No")
	then
		String question = "Take the high road or the low road?";
		String[] answers = {"Low Fantasy", "High Fantasy"};
		String[] books = {"\"Song of Ice and Fire\" George R.R. Martin", "\"The Way of Kings\" Brandon Sanderson"};
		showAnswers(books, chooseAnswer(question, answers));
end

rule "Wizards and barbarians? What's not to like?"
	when
		Action(question == "Do the words Sword and Sorcery have a positive connotation for you?" && answer == "Yes")
	then
		Action a = new Action("Roleplayer?");
		String[] answers = { "Yes", "No" };
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "No, the words Sword and Sorcery have a negative connotation for me."
	when
		Action(question == "Do the words Sword and Sorcery have a positive connotation for you?" && answer == "No")
	then
		Action a = new Action("Looking for an old-fashioned Trilogy?");
		String[] answers = { "Yes", "No" };
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "Three is my lucky number."
	when
		Action(question == "Looking for an old-fashioned Trilogy?" && answer == "Yes")
	then
		String question = "What shall we read about?";
		String[] answers = {"Thieves", "MacGuffins", "Assassins", "Magicians"};
		String[] books = {"\"The Mistborn Trilogy\" Brandon Sanderson", "\"The Sword of Shannara Trilogy\" Terry Brooks",
			"\"The Farseer Trilogy\" Robin Hobb", "\"The Riftwar Saga\" Raymond E. Feist" };
		showAnswers(books, chooseAnswer(question, answers));
end

rule "In for a penny, in for a pound I always say."
	when
		Action(question == "Looking for an old-fashioned Trilogy?" && answer == "No")
	then
		Action a = new Action("So, five or six books enough for you?");
		String[] answers = { "Yes", "No" };
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end

rule "I shall require at least ten."
	when
		Action(question == "So, five or six books enough for you?" && answer == "No")
	then
		Action a = new Action("Enjoy quests to prevent great evil from conquering the world?");
		String[] answers = { "Yes", "No" };
		a.setAnswer(answers[askQuestion(a.getQuestion(), answers)]);
		insert(a);
end
	
rule "Good vs. Evil on an epic scale, please."
	when
		Action(question == "Enjoy quests to prevent great evil from conquering the world?" && answer == "Yes")
	then
		String question = "Who will save us?";
		String[] answers = { "The Seeker of Truth", "The One Power" };
		String[] books = { "\"The Sword of Truth Series\" Terry Goodkind", "\"The Wheel of Time\" Robert Jordan" };
		showAnswers(books, chooseAnswer(question, answers));
end

rule "I need a little more complexity."
	when
		Action(question == "Enjoy quests to prevent great evil from conquering the world?" && answer == "No")
	then
		String question = "Choose wisely, this is the end.";
		String[] answers = { "Earth in the Shadows", "Weaving Timeline" };
		String[] books = { "\"The Chronicles of Amber\" Roger Zelazny", "\"The Malazan Book of the Fallen Series\" Steven Erikson" };
		showAnswers(books, chooseAnswer(question, answers));
end

	
	